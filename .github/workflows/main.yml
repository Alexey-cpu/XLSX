# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake C++/Qt on multiple platforms

on:
  pull_request:
  workflow_dispatch:

env:
  WORKSPACE_DIRECTORY: ${{ github.workspace }}
  #BUILD_DIRECTORY: ${{ github.workspace }}/build
  #DIST_DIRECTORY: ${{ github.workspace }}/dist"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following 3 configurations:
      # 1. <Windows, Release, latest MSVC compiler toolchain on the default runner image, default generator>
      # 2. <Linux, Release, latest GCC compiler toolchain on the default runner image, default generator>
      # 3. <Linux, Release, latest Clang compiler toolchain on the default runner image, default generator>
      #
      # To add more build types (Release, Debug, RelWithDebInfo, etc.) customize the build_type list.
      # os: [ubuntu-latest, windows-latest, macOS-latest]
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macOS-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macOS-latest
            c_compiler: cl
          - os: macOS-latest
            c_compiler: gcc

    steps:

    # modify workspace directory
    - name: Modify directory separator on Windows
      if: matrix.os == 'windows-latest'
      shell: bash
      run: echo "MODIFIED_WORKSPACE_DIRECTORY=${WORKSPACE_DIRECTORY//\\//}" >> $GITHUB_ENV
        
    - name: Modify directory separator on Linux
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: |
        REPO=$WORKSPACE_DIRECTORY
        MODIFIED_WORKSPACE_DIRECTORY=$REPO
        echo MODIFIED_WORKSPACE_DIRECTORY >> $GITHUB_ENV
 
    - name: Modify directory separator on MacOS
      if: matrix.os == 'macOS-latest'
      shell: bash
      run: |
        REPO=$WORKSPACE_DIRECTORY
        MODIFIED_WORKSPACE_DIRECTORY=$REPO
        echo MODIFIED_WORKSPACE_DIRECTORY >> $GITHUB_ENV

    - name: Modified directory
      shell: bash
      run: echo $MODIFIED_WORKSPACE_DIRECTORY
          
    
